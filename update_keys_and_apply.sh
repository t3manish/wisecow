#!/bin/bash

# Base64 encoded keys (these are truncated examples, replace with your full keys)
TLS_CRT="LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVVENDQWptZ0F3SUJBZ0lVVEsxdlZrdG1wMVd0WkM0RUZwSGJzUlgrV3dBd0RRWUpLb1pJaHZjTkFRRUwKQlFBd09ERWtNQ0lHQTFVRUF3d2JkMmx6WldOdmR5NHhPVEl1TVRZNExqVTRMakl1Ym1sd0xtbHZNUkF3RGdZRApWUVFLREFkM2FYTmxZMjkzTUI0WERUSTBNRGN5TWpFM01UazBOMW9YRFRJMU1EY3lNakUzTVRrME4xb3dPREVrCk1DSUdBMVVFQXd3YmQybHpaV052ZHk0eE9USXVNVFk0TGpVNExqSXVibWx3TG1sdk1SQXdEZ1lEVlFRS0RBZDMKYVhObFkyOTNNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXhWR25lcXFqRkJkRAp1ZExvaERmQllJOWYybGRldmJBeE1zVi9OYlBBSTNxWXFBaUI3ckhSNWhQNjlOdWFCblBxejM4VkREMzJzQ2VDCndQYytPRzFPV0lHdkNtZnNtK2pXSFhVbmxvLy95Q1dlYzdXMDlvVkNNeHFQRnhTMmZUMi83c1V4ODBtMkJtSWsKZnR3MUo1Vy9jNjgrMCtTWmZrcEpOcmhSbDk3ZlhlZndrUWRZeGxhdGFFaXdGaFp5eXhudTBEcnk1VmhHcVk4bwpkcUF0VnBFVjBnVDBYWGZEbCtnV0hjMTNoT1d4OWhOQ0N6YVlkemZBQXoxWFJmakxyMXZoS1VqOFNRWW9iRDRuCjllTksrRms2a3Joazh1cXpYTitndDNUSysxMzA1VWRJakROYXRwQVhndDdCb0l4RHNSZE12MTk4ODFPMkRlL3oKS2JXaWtyVWZVd0lEQVFBQm8xTXdVVEFkQmdOVkhRNEVGZ1FVNHVtYUFqRTlnUEIwd0wvRWxiQm5nSWRya1hFdwpId1lEVlIwakJCZ3dGb0FVNHVtYUFqRTlnUEIwd0wvRWxiQm5nSWRya1hFd0R3WURWUjBUQVFIL0JBVXdBd0VCCi96QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFDM3dyTVVXNmVJWm40Yy85bUhTVnBPaWpEV2p5d2Q1dHB1YkMKNmFDNW05a21nME1RR1MzZjJacWJiZGVqdWs1WTVSTy9FcGVjUHMzVGhNM0pEdXJhZ0JpQVFQbGNqY1Ixbzl5RwozNFVKWmp1L3huS3N5WDl0SDY0QzdZYmFrRG9wenh1RlZhKzBXRG44cFN4QXNlMmdoNytCUUhBR0hpcUtKR0R3Cjl0b0RMVXRoMmdHRys4d0ZKQ244eTBEVUxjSlRtelRqemJrRysvYThEaUx4L1JGL0RkSmpQbERCRUpjZDVIVnYKbU1XN3p4QUJHT1hET1dWOE9tcmpJMEhZWVpNNE9IUEJyTDdVMmdYcXc5ajZvbmU4R3pXWW1oWHRwWFdEUzhadwpHZkEza01UMStnT1FmdE9OMy9qd1FZTlNCd3NkWjFzV1Z0eU5TR1Z6N0p2UEkwYUtYUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
TLS_KEY="LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2QUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktZd2dnU2lBZ0VBQW9JQkFRREZVYWQ2cXFNVUYwTzUKMHVpRU44RmdqMS9hVjE2OXNERXl4WDgxczhBamVwaW9DSUh1c2RIbUUvcjAyNW9HYytyUGZ4VU1QZmF3SjRMQQo5ejQ0YlU1WWdhOEtaK3liNk5ZZGRTZVdqLy9JSlo1enRiVDJoVUl6R284WEZMWjlQYi91eFRIelNiWUdZaVIrCjNEVW5sYjl6cno3VDVKbCtTa2sydUZHWDN0OWQ1L0NSQjFqR1ZxMW9TTEFXRm5MTEdlN1FPdkxsV0VhcGp5aDIKb0MxV2tSWFNCUFJkZDhPWDZCWWR6WGVFNWJIMkUwSUxOcGgzTjhBRFBWZEYrTXV2VytFcFNQeEpCaWhzUGlmMQo0MHI0V1RxU3VHVHk2ck5jMzZDM2RNcjdYZlRsUjBpTU0xcTJrQmVDM3NHZ2pFT3hGMHkvWDN6elU3WU43L01wCnRhS1N0UjlUQWdNQkFBRUNnZ0VBT3IwL2k2cy9aOHd6SzU3Ry9CRXkvbUZBQ2hvSFNKV3FWN0JtV2FDOGVuTlUKL1hTbTVWMUhIR1JuU1R3VVlvWmdhTXV1Z3RueFZXZzFxdWNQUFRJQTZDVVc3QlNhNGFEVEdLclhFYUdsWmJvWgpMTjN6VkkyLzhzR2R4aU95M1o2anc5c3RMdjBLOUdTRDg4WHZCdTB6dEtiL0g0b0dUWXVrdHVidzF6S1FNUDVECmRTa1o4ejRXZ1NwTFZSVkRoa2dWU1BZMEZ6TVRPY3Y5cWZmMG9FVHJscUR4QzlKYnd6dnFrMXRDeVpZTWdIM0wKQnU4UTd0dkozYUV6dittMEZnZVNaNWRDOVFlM2JZRVMyeFJGMDdodkovNzhubHBpd05EVDNtNjJCTm8wSjlpRgp6dTlOYlM0dFVHaDJSbFliN0EwTE9CM3ZFaFRWQlhJeGl0UjBpQS91QVFLQmdRRC8yajFOQVNMbUEvZVdwcjJUCjNyeTk5WVhqN09SNitGTXAxei9JVFE1WFc3QzlJMHpRaWNUMGJoRlhmcXdqR3E2RHA3TEIvWm4rZk8vOFhNdk8KOS9lcmQxSGlPN2tteGdocGxnMTBtOXo3S3FmM2ZwQ0NKeWRyUGxZZVNQaGFENkVhVk84a1JBNVFXd0FzQStQUApieFZVb0RFa2Vmc2lSenliQjg3MGFOaFJVd0tCZ1FERmJzYWxYcWVnekJzOXJDVlRyK2tSaUM4d1preWwwV0ZFCmhEVE5ncFFaZGhzQ1J2blZXS0pNTFlrcjFGTWhuRjlGakFjQlUwalZ6K0FTV2k1djZPS0ZhOUlHaEN6elRlRmsKVkpueHJsUkh2dzlXUWRwYnJyaW5FTE96SE5NeXRsdWJkSjIwakZLZjhsZUxvcTBIdnJLNnlDS3ZOWUErUHByWQprekhpSE5BNkFRS0JnQ1RqYVYwMTRiczZMVE5hWFJENTEwcW9JS0xKSC9RZTQ1YXZ3ekYwOHJGanRlcS9NUzhMCi9ncWo1L291ZUZFallxLzJ1TTVCYXplRytlN3Z6aTdNRDdoNEhxVTRxU3hPOXgyS0ZleVBJR0JTT1I5MDd3N2sKNkVrTkZzdU5COG1zWVRUenMvc05tT2E3Q0I1UWZVTUdLQlFvZUkxaXpQT1hROFN5Ym9OTXJvdWpBb0dBYzNlegpOQnBrM1ZVaUJYSzlyZkV1MVhNWmJpd1dYZEJVRzlkYWJtc1ZKTUwvVHRpbDJ4SG9jYmNjQjRjNVMyb0NDbEczCjh4MTdkcGtLQ3BHMW9QdktKNUFFbUkwTElRMEdha0JVZkpXaGN3aVo5cSt5L25YMFJya3M3KzlHMGR6M1BMYjYKV1JMTWJBRTNGRktDOGdta3pEcXFsbUFxN2J4OW9YYU04Um82NmdFQ2dZQjNCeWQ0cmtRZmpiWGNqZ2ZabFJyLwo3U1JMRWREYUhmZmQ1K040bWpmSkZLR2tHQThoM2ZRdzBCNlZabE5jdkl1RzFkZDZNR3VkU2w1RlBhT2pYcStYCjEwOVBjNUdCK3dtb005U0V3dm1aZWxQOXA5M2E1MHhBR240MTJzcXA5ZzBmUm1HR2czNFg5TWtMSHQyVTJnQXYKVHd2anN1YTJVWHNrNVQvTmRRZ3FRdz09Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K"

# Decode and save the TLS certificate
echo $TLS_CRT | base64 --decode > tls.crt

# Decode and save the TLS private key
echo $TLS_KEY | base64 --decode > tls.key

# Print the content of the files to verify
echo "tls.crt content:"
cat tls.crt
echo ""
echo "tls.key content:"
cat tls.key

# Apply the ClusterIssuer and Certificate
cat <<EOF | kubectl apply -f -
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: t3manish@gmail.com
    privateKeySecretRef:
      name: letsencrypt-prod
    solvers:
    - http01:
        ingress:
          class: nginx
EOF

cat <<EOF | kubectl apply -f -
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: wisecow-tls
  namespace: default
spec:
  secretName: wisecow-tls
  issuerRef:
    name: letsencrypt-prod
    kind: ClusterIssuer
  dnsNames:
  - wisecow.192.168.58.2.nip.io
EOF

# Verify the creation of the resources
kubectl get certificates
kubectl describe certificate wisecow-tls
kubectl describe clusterissuer letsencrypt-prod
